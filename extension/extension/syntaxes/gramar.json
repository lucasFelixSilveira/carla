{
    "scopeName": "main.crl",
    "fileTypes": [
        "crl",
        "test.crl"
    ],
    "patterns": [
        {
            "name": "support.class",
            "match": "([u]?int(8|16|32|64|128)|char|byte|ascii|bool|void|(\\w|\\d)*_t)",
            "captures": {
                "0": {
                    "name": "support.function.example"
                }
            }
        },
        {
            "name": "constant.numeric.example",
            "match": "\\b\\d+\\b"
        },
        {
            "name": "keyword.control.example",
            "font-style": "italic",
            "match": "\\b(for|return|if|include|else|self|our|struct|impl|enum|const)\\b"
        },
        {
            "name": "entity.name.function.example",
            "match": "\\b([a-zA-Z0-9][a-zA-Z0-9]*)(?=\\s*\\()"
        },
        {
            "name": "keyword.operator.example",
            "match": "[=:\\?]+",
            "captures": {
                "0": {
                    "name": "keyword.operator.example"
                }
            }
        },
        {
            "name": "string.quoted.double.example",
            "begin": "\"",
            "end": "\"",
            "captures": {
                "0": {
                    "name": "punctuation.definition.string.begin.example"
                },
                "1": {
                    "name": "constant.character.escape.example"
                }
            },
            "patterns": [
                {
                    "name": "constant.character.escape.example",
                    "match": "\\\\."
                },
                {
                    "name": "keyword.example",
                    "match": "\\{[sd]\\}",
                    "captures": {
                        "0": {
                            "name": "keyword.example"
                        }
                    }
                }
            ]
        },        
        {
            "name": "entity.name.tag.example",
            "begin": "::",
            "end": "\\b(\\w+)\\b",
            "captures": {
                "0": {
                    "name": "support.function.example"
                }
            }
        },
        {
            "name": "entity.name.tag.example",
            "match": "\\b(\\w+)\\b(?=[:]{2})",
            "captures": {
                "0": {
                    "name": "support.class.exple"
                }
            }
        },
        {
            "name": "function-name",
            "match": "::",
            "captures": {
                "0": {
                    "name": "variable.name"
                }
            }
        },
        {
            "name": "function-name",
            "match": "\\b[a-z_][a-zA-Z0-9_]*\\b",
            "captures": {
                "0": {
                    "name": "variable.name"
                }
            }
        },
        {
            "name": "comment.line.double-slash.example",
            "match": "(--.*$|#|;)"
        },
        {
            "name": "comment.line.double-slash.example",
            "begin": "-[#].*",
            "end": ".*[#]-"
        }
    ],
    "repository": {
        "constant": {
            "patterns": [
                {
                    "name": "constant.language.example",
                    "match": "\\b(true|false|null)\\b"
                }
            ]
        }
    }
}
