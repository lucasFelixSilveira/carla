; This is a code generated by the Carla programming language

define i32 @main() {
entry:
; [CARLA DEBUG]: For iteration
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  store i32 10, ptr %2, align 4
  %3 = load i32, ptr %2, align 4
  store i32 0, ptr %1, align 4
  br label %.l0.carla.for_begin
.l0.carla.for_begin:
  %5 = load i32, ptr %1, align 4
  %6 = icmp slt i32 %5, %3
  br i1 %6, label %.l0.carla.for_body, label %.l0.carla.for_end
.l0.carla.for_body:
; [CARLA DEBUG]: Function added to stack: println.
  %8 = alloca ptr, align 8
  %9 = getelementptr inbounds [13 x i8], ptr @.carla.static.str.0, i32 0, i32 0
  store ptr %9, ptr %8, align 8
  %10 = load ptr, ptr %8, align 8
; [CARLA DEBUG]: The argument is a text
  %11 = call i32 @stdio.println(ptr %10)
; [CARLA DEBUG]: 0 items remaining in the stack.
; [CARLA DEBUG]: End of ID iteration 0
  %12 = alloca i64, align 8
  store i64 1, ptr %12, align 8
  %13 = load i64, ptr %12, align 8
; [CARLA DEBUG]: Found variable: i
  %14 = load i32, ptr %1, align 4
  %15 = sext i32 %14 to i64
  %16 = add nsw i64 %15, %13
  %17 = trunc i64 %16 to i32
  store i32 %17, ptr %1, align 4
  br label %.l0.carla.for_begin
.l0.carla.for_end:
; [CARLA DEBUG]: Default success return, in case the return is not done manually.
  ret i32 0
}
; [CARLA DEBUG]: Tab n: 1
@.carla.static.str.0 = private constant [13 x i8] c"Hello, world\00", align 1

; Extern functions
declare i32 @puts(ptr)
declare i32 @printf(ptr)
declare i32 @putchar(i32)
declare i32 @sprintf(ptr, ptr, ...)
; stdio Initialized
define void @stdio.println(ptr %0) {
entry:
  %1 = call i32 @puts(ptr %0)
  ret void
}

