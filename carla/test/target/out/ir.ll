; This is a code generated by the Carla programming language

define i8 @main() {
entry:
  %1 = alloca i16, align 2
  store i16 123, ptr %1, align 2
  %2 = alloca i32, align 4
  store i32 83, ptr %2, align 4
  %3 = alloca i64, align 8
  %4 = load i16, ptr %1, align 2
  %5 = sext i16 %4 to i64
  %6 = load i32, ptr %2, align 4
  %7 = sext i32 %6 to i64
  %8 = alloca i64, align 8
  %9 = add nsw i64 %5, %7
  store i64 %9, ptr %8, align 8
  %10 = load i64, ptr %8, align 8
  store i64 %10, ptr %3, align 8
; [CARLA DEBUG]: Function added to stack: puti.
  %11 = load i64, ptr %3, align 8
  %12 = call i32 @stdio.puti(i64 %11)
; [CARLA DEBUG]: 0 items remaining in the stack.
  %13 = alloca i8, align 1
  store i8 0, ptr %13, align 1
  %14 = load i8, ptr %13, align 1
  ret i8 %14
}


; Extern functions
declare i32 @puts(ptr)
declare i32 @putchar(i32)
declare i32 @sprintf(ptr, ptr, ...)
; stdio Initialized
@.str = private constant [4 x i8] c"%d\0A\00", align 1 
declare i32 @printf(i8*, ...) 
define void @stdio.puti(i32 %n) {
entry:
  %1 = call i32 (i8*, ...) @printf(i8* @.str, i32 %n)
  ret void
}

